"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.onGroupProMsg = exports.onFirstView = void 0;
const core_1 = require("oicq/lib/core");
const guild_1 = require("./guild");
const message_1 = require("./message");
function onFirstView(payload) {
    const proto = core_1.pb.decode(payload);
    if (!proto[3])
        return;
    if (!Array.isArray(proto[3]))
        proto[3] = [proto[3]];
    const tmp = new Set();
    for (let p of proto[3]) {
        const id = String(p[1]), name = String(p[4]);
        tmp.add(id);
        if (!this.guilds.has(id))
            this.guilds.set(id, new guild_1.Guild(this, id));
        const guild = this.guilds.get(id);
        guild._renew(name, p[3]);
    }
    for (let [id, _] of this.guilds) {
        if (!tmp.has(id))
            this.guilds.delete(id);
    }
    this.client.logger.mark(`[Guild] 加载了${this.guilds.size}个频道`);
    this.emit("ready");
}
exports.onFirstView = onFirstView;
function onGroupProMsg(payload) {
    try {
        var msg = new message_1.GuildMessage(core_1.pb.decode(payload));
    }
    catch {
        return;
    }
    this.client.logger.info(`[Guild: ${msg.guild_name}, Member: ${msg.sender.nickname}]` + msg.raw_message);
    const channel = this.guilds.get(msg.guild_id)?.channels.get(msg.channel_id);
    if (channel)
        msg.reply = channel.sendMessage.bind(channel);
    this.emit("message", msg);
}
exports.onGroupProMsg = onGroupProMsg;
