/// <reference types="node" />
import EventEmitter from "events";
import { Client } from "oicq";
import { pb } from "oicq/lib/core";
import { Guild } from "./guild";
import { GuildMessage } from "./message";
declare module "oicq" {
    interface Client {
        sendOidbSvcTrpcTcp: (cmd: string, body: Uint8Array) => Promise<pb.Proto>;
    }
}
export interface GuildApp {
    on(event: "ready", listener: (this: this) => void): this;
    on(event: "message", listener: (this: this, e: GuildMessage) => void): this;
    once(event: "ready", listener: (this: this) => void): this;
    once(event: "message", listener: (this: this, e: GuildMessage) => void): this;
    off(event: "ready", listener: (this: this) => void): this;
    off(event: "message", listener: (this: this, e: GuildMessage) => void): this;
}
/** 获取应用程序入口 */
export declare class GuildApp extends EventEmitter {
    protected readonly c: Client;
    /** 我的频道id */
    tiny_id: string;
    /** 我加入的频道列表 */
    guilds: Map<string, Guild>;
    /** 获得所属的客户端对象 */
    get client(): Client;
    protected constructor(client: Client);
    /** 绑定QQ客户端 */
    static bind(client: Client): GuildApp;
    /** 重新加载频道列表 */
    reloadGuilds(): Promise<void>;
}
